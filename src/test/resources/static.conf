server.static {
  database {
    requestTimeout = 5 //in seconds

    //MariaDB
    mariadb {
      databaseName = "core3_test"
      //username = ??? //pass as -D command line parameter; ex: -Dserver.static.database.mariadb.username="<some user>"
      //password = ??? //pass as -D command line parameter; ex: -Dserver.static.database.mariadb.password="<some password>"
    }

    //Solr
    solr {
      hostname = "localhost"
      port = 8983
      schema = "http"
      //username = ??? //pass as -D command line parameter; ex: -Dserver.static.database.solr.username="<some user>"
      //password = ??? //pass as -D command line parameter; ex: -Dserver.static.database.solr.password="<some password>"
      shardsCount = 1
      replicasCount = 1
      maxCommitTime = 3 //in seconds
    }

    //Redis
    redis {
      hostname = "localhost"
      port = 6379
      //secret = ??? //pass as -D command line parameter; ex: -Dserver.static.database.redis.secret="<some secret>"
      connectionTimeout = 5 //in seconds
      databaseID = 0
      scanCount = 100
    }

    //CouchDB
    couchdb {
      hostname = "localhost"
      port = 5984
      schema = "http"
      //username = ??? //pass as -D command line parameter; ex: -Dserver.static.database.couchdb.username="<some user>"
      //password = ??? //pass as -D command line parameter; ex: -Dserver.static.database.couchdb.password="<some password>"
      cacheOnly = false
    }

    //ElasticSearch - Search
    elastic-search {
      hostname = "localhost"
      port = 9300
      clusterName = "dev.elastic"
      searchOnly = true
      coexist = false
      refreshPolicy = "NONE"
      scrollSize = 10
      scrollExpiration = 30 //in seconds
    }

    //ElasticSearch - Search
    elastic-store {
      hostname = "localhost"
      port = 9300
      clusterName = "dev.elastic"
      searchOnly = false
      coexist = false
      refreshPolicy = "IMMEDIATE"
      scrollSize = 10
      scrollExpiration = 30 //in seconds
    }
  }

  security {
    authentication {
      services {
        LocalServiceController_Public {
          uri = "https://localhost:19001/public"
          serviceUser = "test-client"
          serviceUserPassword = "some-test-password#"
        }
      }

      clients {
        LocalClientController {
          instanceSalt = "change-to-something-random!"
          passwordIterations = 15000
          keyLength = 256

          placeholderPasswordSize = 128
          saltSize = 128
          sessionTokenSize = 130
          localTokenExpiration = 15 //in minutes

          override {
            userID = "test-admin"
            password = "some-test-password!"
          }
        }

        LocalServiceController {
          instanceSalt = "change-to-something-random!"
          passwordIterations = 15000
          keyLength = 256

          placeholderPasswordSize = 128
          saltSize = 128
          sessionTokenSize = 130
          localTokenExpiration = 15 //in minutes
        }
      }
    }
  }

  testing {
    config {
      valueOne = 1
      valueTwo = "two"
      valueThree = false
    }

    security {
      valid {
        instanceSalt = "not-so-random-test-salt!"
        passwordIterations = 15000
        keyLength = 256
        placeholderPasswordSize = 128
        saltSize = 128
      }

      invalid {
        instanceSalt = "not-so-random-test-salt!"
        passwordIterations = 14999
        keyLength = 256
        placeholderPasswordSize = 128
        saltSize = 128
      }
    }

    reports {
      time {
        jsonPath = "/tmp/reports/time"
        dsvPath = "/tmp/reports/time"
      }
      memory {
        jsonPath = "/tmp/reports/memory"
        dsvPath = "/tmp/reports/memory"
      }
    }
  }
}